@using RezaB.Web.Helpers

@model RadiusR_Manager.Models.ViewModels.SupportRequestModels.SupportRequestDetailsViewModel

@{
    ViewBag.Title = $"{Model.RequestInfo.SupportPin}-{RadiusR.Localization.Pages.Common.Details}";
    int? groupId = ViewBag.GroupId as int?;
    SupportGroupClaim supportPermissions = ViewBag.GroupPermissions as SupportGroupClaim;
    var processParameters = ViewBag.ProcessParameters as RadiusR_Manager.Models.ViewModels.SupportRequestModels.SupportRequestProcessViewModel ?? new RadiusR_Manager.Models.ViewModels.SupportRequestModels.SupportRequestProcessViewModel();
}

<div class="centered-form-wrapper">
    <div class="centered-form">
        <table class="input-table">
            <tr>
                <td>
                    @Html.LabelFor(model => model.RequestInfo.SupportPin)
                </td>
                <td>
                    @Html.DisplayFor(model => model.RequestInfo.SupportPin)
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(model => model.RequestInfo.SubscriberNo)
                </td>
                <td>
                    <a href="@Url.Action("Details", "Client", new { id = Model.RequestInfo.SubscriptionID })" class="details-link">@Html.DisplayFor(model => model.RequestInfo.SubscriberNo)</a>
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(model => model.RequestInfo.RequestType)/@Html.LabelFor(model => model.RequestInfo.RequestSubType)
                </td>
                <td>
                    <div>
                        @Html.DisplayFor(model => model.RequestInfo.RequestType)
                    </div>
                    <div class="support-request-sub-type-view">
                        @Html.DisplayFor(model => model.RequestInfo.RequestSubType)
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(model => model.RequestInfo.Date)
                </td>
                <td>
                    @Html.DisplayFor(model => model.RequestInfo.Date)
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(model => model.RequestInfo.AssignedGroup)
                </td>
                <td>
                    @if (Model.RequestInfo.AssignedGroup != null)
                    {
                        <div class="support-request-tag support-request-assigned-group">
                            @Html.DisplayNameFor(model => model.RequestInfo.AssignedGroup):
                            @Html.DisplayFor(model => model.RequestInfo.AssignedGroup)
                        </div>
                    }
                    @if (Model.RequestInfo.AssignedUser != null)
                    {
                        <div class="support-request-tag support-request-assigned-user">
                            @Html.DisplayNameFor(model => model.RequestInfo.AssignedUser):
                            @Html.DisplayFor(model => model.RequestInfo.AssignedUser)
                        </div>
                    }
                    @if (Model.RequestInfo.RedirectedToGroup != null)
                    {
                        <div class="support-request-tag support-request-redirected-to-group">
                            @Html.DisplayNameFor(model => model.RequestInfo.RedirectedToGroup):
                            @Html.DisplayFor(model => model.RequestInfo.RedirectedToGroup)
                        </div>
                    }
                </td>
            </tr>
            @foreach (var item in Model.Stages)
            {
                <tr>
                    <td colspan="2" class="support-request-stage">
                        <div class="support-request-stage-row support-request-stage-head">
                            @Html.DisplayFor(modelItem => item.Date)
                            -
                            @if (item.CommittingUser != null)
                            {
                                <span class="support-request-tag support-request-stage-user">
                                    @Html.DisplayFor(modelItem => item.CommittingUser)
                                    &#40;
                                    @if (item.GroupName != null)
                                    {
                                        @Html.DisplayFor(modelItem => item.GroupName)
                                    }
                                    else
                                    {
                                        @RadiusR.Localization.Pages.Common.Direct
                                    }
                                    &#41;
                                </span>
                            }
                            else
                            {
                                <span class="support-request-tag support-request-stage-customer">@RadiusR.Localization.Pages.Common.Customer</span>
                            }
                            -
                            <span class="support-request-tag support-request-stage-action">@Html.DisplayFor(modelItem => item.ActionType)</span>
                        </div>
                        <div class="support-request-stage-row">
                            <div class="support-request-message">@Html.DisplayFor(modelItem => item.Message)</div>
                        </div>
                    </td>
                </tr>
            }
            <tr>
                <td colspan="2">
                    @if (supportPermissions != null && Model.RequestInfo.StateID != (short)RadiusR.DB.Enums.SupportRequests.SupportRequestStateID.Done)
                    {
                        <div class="submit-row support-request-action-box">
                            @using (Html.BeginForm())
                            {
                                @Html.HiddenFor(model => processParameters.ActionType, new { @class = "action-type-input" })
                                @Html.AntiForgeryToken()
                                @*message*@
                                <div class="support-request-action-row">
                                    @Html.LabelFor(model => processParameters.AddedMessage)
                                </div>
                                <div class="support-request-action-row">
                                    @Html.EditorFor(model => processParameters.AddedMessage, new { htmlAttributes = new { @class = "support-request-note", maxlength = 1000, autocomplete = "off" } })
                                </div>
                                <div class="support-request-action-row">
                                    @Html.ValidationMessageFor(model => processParameters.AddedMessage)
                                </div>
                                if (Model.RequestInfo.SubscriptionID.HasValue && Model.RequestInfo.IsVisibleToCustomer && supportPermissions.CanWriteToCustomer)
                                {
                                    <div class="support-request-action-row">
                                        @Html.EditorFor(model => processParameters.IsVisibleToCustomer)
                                    </div>
                                }
                                <ol class="important-ordered-list">
                                    @if (supportPermissions.IsLeader)
                                    {
                                        <li>
                                            @*assign to a member*@
                                            <div class="submit-group-row support-request-action-row support-request-action-list-item">
                                                @Html.Select(model => processParameters.SelectedUserID, (SelectList)ViewBag.GroupUsers, RadiusR.Localization.Pages.Common.Choose)
                                                &nbsp;
                                                <input type="button" value="@RadiusR.Localization.Pages.Common.AssignToMember" class="link-button iconed-button next-button submit-group-button" addition-data="@((short)RadiusR.DB.Enums.SupportRequests.SupportRequestActionTypes.AssignToMember)" />
                                            </div>
                                            <div class="text-danger submit-group-row support-request-action-row">
                                                @Html.ValidationMessageFor(model => processParameters.SelectedUserID)
                                            </div>
                                        </li>
                                    }
                                    @if (supportPermissions.IsLeader || supportPermissions.CanRedirect)
                                    {
                                        <li>
                                            @*redirect to another group*@
                                            <div class="submit-group-row support-request-action-row support-request-action-list-item">
                                                @Html.Select(model => processParameters.SelectedGroupID, (SelectList)ViewBag.RedirectGroups, RadiusR.Localization.Pages.Common.Choose)
                                                &nbsp;
                                                <input type="button" value="@RadiusR.Localization.Pages.Common.RedirectToGroup" class="link-button iconed-button next-button submit-group-button" addition-data="@((short)RadiusR.DB.Enums.SupportRequests.SupportRequestActionTypes.RedirectToGroup)" />
                                            </div>
                                            <div class="text-danger submit-group-row support-request-action-row">
                                                @Html.ValidationMessageFor(model => processParameters.SelectedGroupID)
                                            </div>
                                        </li>
                                    }
                                    <li>
                                        @*add note*@
                                        <div class="submit-group-row support-request-action-row support-request-action-list-item">
                                            <input type="button" value="@RadiusR.Localization.Pages.Common.AddNote" class="link-button iconed-button save-button submit-group-button" addition-data="@((short)RadiusR.DB.Enums.SupportRequests.SupportRequestActionTypes.Create)" />
                                        </div>
                                    </li>
                                    @if (supportPermissions.IsLeader || supportPermissions.CanChangeState)
                                    {
                                        <li>
                                            @*finish*@
                                            <div class="submit-group-row support-request-action-row support-request-action-list-item">
                                                <input type="button" value="@RadiusR.Localization.Pages.Common.Finish" class="link-button iconed-button accept-button submit-group-button" addition-data="@((short)RadiusR.DB.Enums.SupportRequests.SupportRequestActionTypes.ChangeState)" />
                                                <span class="warning-message-hint">@RadiusR.Localization.Pages.WarningMessages.SupportRequestFinishWarning</span>
                                            </div>
                                        </li>
                                    }
                                </ol>
                            }
                        </div>
                    }
                </td>
            </tr>
            <tr>
                <td colspan="2" class="centered submit-row">
                    <a href="@ViewBag.ReturnUrl" class="link-button iconed-button back-button">@RadiusR.Localization.Pages.Common.Back</a>
                </td>
            </tr>
            <tr>
                <td colspan="2" class="centered">
                    @Html.Partial("_WaitTimer")
                </td>
            </tr>
        </table>
    </div>
</div>

@section PageScripts{
    <script>
        $('input.submit-group-button').click(function () {
            var currentButton = $(this);
            var currentRow = currentButton.closest('div.submit-group-row');
            currentRow.addClass('action-selected-row');
            var currentForm = currentButton.closest('form');
            var invalidRows = currentForm.find('div.submit-group-row:not(.action-selected-row)');
            invalidRows.remove();

            currentForm.find('input.action-type-input').val(currentButton.attr('addition-data'));
            currentForm.submit();
        });
        $('.submit-row').find('form').submit(function () {
            $('.submit-row').hide();

            StartWaitingCounter('div.waiting-progress');
        });
    </script>
}