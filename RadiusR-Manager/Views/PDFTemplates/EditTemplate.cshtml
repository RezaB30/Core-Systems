@using RezaB.Web.Helpers
@using System.Globalization

@model RadiusR_Manager.Models.ViewModels.PDFTemplates.PDFParametersViewModel

@{
    ViewBag.Title = RadiusR.Localization.Pages.Common.EditTemplate + "-" + ViewBag.TemplateName;
    var hasBackground = (bool)ViewBag.HasBackground;
}

<div class="centered-form-wrapper">
    <div class="centered-form">
        <div>
            @using (Html.BeginForm("ChangeTemplateBackground", null, FormMethod.Post, new { @enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                @Html.Hidden("id", Request.QueryString["id"])
                @Html.FileUpload("background", "image/*")
                <input type="submit" value="@RadiusR.Localization.Pages.Common.Save" class="link-button iconed-button save-button" />
            }
            @if (hasBackground)
            {
                <div style="text-align: right;">
                    @using (Html.BeginForm("RemoveTemplateBackground", null, FormMethod.Post, new { @confirm = "enabled" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.Hidden("id", Request.QueryString["id"])
                        <input type="submit" value="@RadiusR.Localization.Pages.Common.Remove" class="link-button iconed-button delete-button" />
                    }
                </div>
            }
        </div>
        @if (hasBackground)
        {
            using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
    <div class="pdf-template-background-container">
        <img class="pdf-template-background" src='@Url.Action("GetPDFBackground", new { id = Request.RequestContext.RouteData.Values["id"] })' style="max-width: 1024px;" />
        <!--Context menu-->
        <div class="pdf-context-menu-container" id="context-menu-root">
            <div class="pdf-context-menu-item root-item">
                <span>@Html.DisplayNameFor(model => model.TransferAction)</span>
                <div class="pdf-context-menu-container">
                    <div class="pdf-context-menu-item root-item" content-id="@Html.IdFor(model=>model.TransferAction.TransferringSubscription)" content-name="@Html.NameFor(model=>model.TransferAction.TransferringSubscription)">
                        <span>@Html.DisplayNameFor(model => model.TransferAction.TransferringSubscription)</span>
                        <div class="pdf-context-menu-container">
                            <div class="pdf-context-menu-item" content-id="@Html.IdFor(model=>model.TransferAction.TransferringSubscription.SubscriberNo)" content-name="@Html.NameFor(model=>model.TransferAction.TransferringSubscription.SubscriberNo)">
                                <span>@Html.DisplayNameFor(model => model.TransferAction.TransferringSubscription.SubscriberNo)</span>
                            </div>
                            <div class="pdf-context-menu-item" content-id="@Html.IdFor(model=>model.TransferAction.TransferringSubscription.FirstName)" content-name="@Html.NameFor(model=>model.TransferAction.TransferringSubscription.FirstName)">
                                <span>@Html.DisplayNameFor(model => model.TransferAction.TransferringSubscription.FirstName)</span>
                            </div>
                            <div class="pdf-context-menu-item" content-id="@Html.IdFor(model=>model.TransferAction.TransferringSubscription.LastName)" content-name="@Html.NameFor(model=>model.TransferAction.TransferringSubscription.LastName)">
                                <span>@Html.DisplayNameFor(model => model.TransferAction.TransferringSubscription.LastName)</span>
                            </div>
                            <div class="pdf-context-menu-item" content-id="@Html.IdFor(model=>model.TransferAction.TransferringSubscription.FirstAndLastName)" content-name="@Html.NameFor(model=>model.TransferAction.TransferringSubscription.FirstAndLastName)">
                                <span>@Html.DisplayNameFor(model => model.TransferAction.TransferringSubscription.FirstAndLastName)</span>
                            </div>
                            <div class="pdf-context-menu-item" content-id="@Html.IdFor(model=>model.TransferAction.TransferringSubscription.CompanyTitle)" content-name="@Html.NameFor(model=>model.TransferAction.TransferringSubscription.CompanyTitle)">
                                <span>@Html.DisplayNameFor(model => model.TransferAction.TransferringSubscription.CompanyTitle)</span>
                            </div>
                            <div class="pdf-context-menu-item" content-id="@Html.IdFor(model=>model.TransferAction.TransferringSubscription.DisplayName)" content-name="@Html.NameFor(model=>model.TransferAction.TransferringSubscription.DisplayName)">
                                <span>@Html.DisplayNameFor(model => model.TransferAction.TransferringSubscription.DisplayName)</span>
                            </div>
                            <div class="pdf-context-menu-item" content-id="@Html.IdFor(model=>model.TransferAction.TransferringSubscription.TCKNo)" content-name="@Html.NameFor(model=>model.TransferAction.TransferringSubscription.TCKNo)">
                                <span>@Html.DisplayNameFor(model => model.TransferAction.TransferringSubscription.TCKNo)</span>
                            </div>
                            <div class="pdf-context-menu-item" content-id="@Html.IdFor(model=>model.TransferAction.TransferringSubscription.TaxNo)" content-name="@Html.NameFor(model=>model.TransferAction.TransferringSubscription.TaxNo)">
                                <span>@Html.DisplayNameFor(model => model.TransferAction.TransferringSubscription.TaxNo)</span>
                            </div>
                            <div class="pdf-context-menu-item" content-id="@Html.IdFor(model=>model.TransferAction.TransferringSubscription.TCKAndTaxNo)" content-name="@Html.NameFor(model=>model.TransferAction.TransferringSubscription.TCKAndTaxNo)">
                                <span>@Html.DisplayNameFor(model => model.TransferAction.TransferringSubscription.TCKAndTaxNo)</span>
                            </div>
                        </div>
                    </div>
                    <div class="pdf-context-menu-item root-item" content-id="@Html.IdFor(model=>model.TransferAction.TransferredSubscription)" content-name="@Html.NameFor(model=>model.TransferAction.TransferredSubscription)">
                        <span>@Html.DisplayNameFor(model => model.TransferAction.TransferredSubscription)</span>
                        <div class="pdf-context-menu-container">
                            <div class="pdf-context-menu-item" content-id="@Html.IdFor(model=>model.TransferAction.TransferredSubscription.SubscriberNo)" content-name="@Html.NameFor(model=>model.TransferAction.TransferredSubscription.SubscriberNo)">
                                <span>@Html.DisplayNameFor(model => model.TransferAction.TransferredSubscription.SubscriberNo)</span>
                            </div>
                            <div class="pdf-context-menu-item" content-id="@Html.IdFor(model=>model.TransferAction.TransferredSubscription.FirstName)" content-name="@Html.NameFor(model=>model.TransferAction.TransferredSubscription.FirstName)">
                                <span>@Html.DisplayNameFor(model => model.TransferAction.TransferredSubscription.FirstName)</span>
                            </div>
                            <div class="pdf-context-menu-item" content-id="@Html.IdFor(model=>model.TransferAction.TransferredSubscription.LastName)" content-name="@Html.NameFor(model=>model.TransferAction.TransferredSubscription.LastName)">
                                <span>@Html.DisplayNameFor(model => model.TransferAction.TransferredSubscription.LastName)</span>
                            </div>
                            <div class="pdf-context-menu-item" content-id="@Html.IdFor(model=>model.TransferAction.TransferredSubscription.FirstAndLastName)" content-name="@Html.NameFor(model=>model.TransferAction.TransferredSubscription.FirstAndLastName)">
                                <span>@Html.DisplayNameFor(model => model.TransferAction.TransferredSubscription.FirstAndLastName)</span>
                            </div>
                            <div class="pdf-context-menu-item" content-id="@Html.IdFor(model=>model.TransferAction.TransferredSubscription.CompanyTitle)" content-name="@Html.NameFor(model=>model.TransferAction.TransferredSubscription.CompanyTitle)">
                                <span>@Html.DisplayNameFor(model => model.TransferAction.TransferredSubscription.CompanyTitle)</span>
                            </div>
                            <div class="pdf-context-menu-item" content-id="@Html.IdFor(model=>model.TransferAction.TransferredSubscription.DisplayName)" content-name="@Html.NameFor(model=>model.TransferAction.TransferredSubscription.DisplayName)">
                                <span>@Html.DisplayNameFor(model => model.TransferAction.TransferredSubscription.DisplayName)</span>
                            </div>
                            <div class="pdf-context-menu-item" content-id="@Html.IdFor(model=>model.TransferAction.TransferredSubscription.TCKNo)" content-name="@Html.NameFor(model=>model.TransferAction.TransferredSubscription.TCKNo)">
                                <span>@Html.DisplayNameFor(model => model.TransferAction.TransferredSubscription.TCKNo)</span>
                            </div>
                            <div class="pdf-context-menu-item" content-id="@Html.IdFor(model=>model.TransferAction.TransferredSubscription.TaxNo)" content-name="@Html.NameFor(model=>model.TransferAction.TransferredSubscription.TaxNo)">
                                <span>@Html.DisplayNameFor(model => model.TransferAction.TransferredSubscription.TaxNo)</span>
                            </div>
                            <div class="pdf-context-menu-item" content-id="@Html.IdFor(model=>model.TransferAction.TransferredSubscription.TCKAndTaxNo)" content-name="@Html.NameFor(model=>model.TransferAction.TransferredSubscription.TCKAndTaxNo)">
                                <span>@Html.DisplayNameFor(model => model.TransferAction.TransferredSubscription.TCKAndTaxNo)</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="pdf-context-menu-item" content-id="@Html.IdFor(model=>model.SubscriberNo)" content-name="@Html.NameFor(model=>model.SubscriberNo)">
                <span>@Html.DisplayNameFor(model => model.SubscriberNo)</span>
            </div>
            <div class="pdf-context-menu-item" content-id="@Html.IdFor(model=>model.FirstName)" content-name="@Html.NameFor(model=>model.FirstName)">
                <span>@Html.DisplayNameFor(model => model.FirstName)</span>
            </div>
            <div class="pdf-context-menu-item" content-id="@Html.IdFor(model=>model.LastName)" content-name="@Html.NameFor(model=>model.LastName)">
                <span>@Html.DisplayNameFor(model => model.LastName)</span>
            </div>
            <div class="pdf-context-menu-item" content-id="@Html.IdFor(model=>model.MothersName)" content-name="@Html.NameFor(model=>model.MothersName)">
                <span>@Html.DisplayNameFor(model => model.MothersName)</span>
            </div>
            <div class="pdf-context-menu-item" content-id="@Html.IdFor(model=>model.MothersMaidenName)" content-name="@Html.NameFor(model=>model.MothersMaidenName)">
                <span>@Html.DisplayNameFor(model => model.MothersMaidenName)</span>
            </div>
            <div class="pdf-context-menu-item" content-id="@Html.IdFor(model=>model.FathersName)" content-name="@Html.NameFor(model=>model.FathersName)">
                <span>@Html.DisplayNameFor(model => model.FathersName)</span>
            </div>
            <div class="pdf-context-menu-item" content-id="@Html.IdFor(model=>model.BirthDate)" content-name="@Html.NameFor(model=>model.BirthDate)">
                <span>@Html.DisplayNameFor(model => model.BirthDate)</span>
            </div>
            <div class="pdf-context-menu-item" content-id="@Html.IdFor(model=>model.BirthPlace)" content-name="@Html.NameFor(model=>model.BirthPlace)">
                <span>@Html.DisplayNameFor(model => model.BirthPlace)</span>
            </div>
            <div class="pdf-context-menu-item" content-id="@Html.IdFor(model=>model.TCKNo)" content-name="@Html.NameFor(model=>model.TCKNo)">
                <span>@Html.DisplayNameFor(model => model.TCKNo)</span>
            </div>
            <div class="pdf-context-menu-item" content-id="@Html.IdFor(model=>model.Nationality)" content-name="@Html.NameFor(model=>model.Nationality)">
                <span>@Html.DisplayNameFor(model => model.Nationality)</span>
            </div>
            <div class="pdf-context-menu-item" content-id="@Html.IdFor(model=>model.Profession)" content-name="@Html.NameFor(model=>model.Profession)">
                <span>@Html.DisplayNameFor(model => model.Profession)</span>
            </div>
            <div class="pdf-context-menu-item root-item">
                <span>@Html.DisplayNameFor(model => model.Sexes)</span>
                <div class="pdf-context-menu-container">
                    <div class="pdf-context-menu-item" content-id="@Html.IdFor(model=>model.Sexes.Male)" content-name="@Html.NameFor(model=>model.Sexes.Male)">
                        <span>@Html.DisplayNameFor(model => model.Sexes.Male)</span>
                    </div>
                    <div class="pdf-context-menu-item" content-id="@Html.IdFor(model=>model.Sexes.Female)" content-name="@Html.NameFor(model=>model.Sexes.Female)">
                        <span>@Html.DisplayNameFor(model => model.Sexes.Female)</span>
                    </div>
                </div>
            </div>
            <div class="pdf-context-menu-item" content-id="@Html.IdFor(model=>model.ContactPhoneNo)" content-name="@Html.NameFor(model=>model.ContactPhoneNo)">
                <span>@Html.DisplayNameFor(model => model.ContactPhoneNo)</span>
            </div>
            <div class="pdf-context-menu-item" content-id="@Html.IdFor(model=>model.Email)" content-name="@Html.NameFor(model=>model.Email)">
                <span>@Html.DisplayNameFor(model => model.Email)</span>
            </div>
            <div class="pdf-context-menu-item root-item">
                <span>@Html.DisplayNameFor(model => model.ResidenceAddress)</span>
                <div class="pdf-context-menu-container">
                    <div class="pdf-context-menu-item" content-id="@Html.IdFor(model=>model.ResidenceAddress.ProvinceName)" content-name="@Html.NameFor(model=>model.ResidenceAddress.ProvinceName)">
                        <span>@Html.DisplayNameFor(model => model.ResidenceAddress.ProvinceName)</span>
                    </div>
                    <div class="pdf-context-menu-item" content-id="@Html.IdFor(model=>model.ResidenceAddress.DistrictName)" content-name="@Html.NameFor(model=>model.ResidenceAddress.DistrictName)">
                        <span>@Html.DisplayNameFor(model => model.ResidenceAddress.DistrictName)</span>
                    </div>
                    <div class="pdf-context-menu-item" content-id="@Html.IdFor(model=>model.ResidenceAddress.NeighborhoodName)" content-name="@Html.NameFor(model=>model.ResidenceAddress.NeighborhoodName)">
                        <span>@Html.DisplayNameFor(model => model.ResidenceAddress.NeighborhoodName)</span>
                    </div>
                    <div class="pdf-context-menu-item" content-id="@Html.IdFor(model=>model.ResidenceAddress.StreetName)" content-name="@Html.NameFor(model=>model.ResidenceAddress.StreetName)">
                        <span>@Html.DisplayNameFor(model => model.ResidenceAddress.StreetName)</span>
                    </div>
                    <div class="pdf-context-menu-item" content-id="@Html.IdFor(model=>model.ResidenceAddress.BuildingNo)" content-name="@Html.NameFor(model=>model.ResidenceAddress.BuildingNo)">
                        <span>@Html.DisplayNameFor(model => model.ResidenceAddress.BuildingNo)</span>
                    </div>
                    <div class="pdf-context-menu-item" content-id="@Html.IdFor(model=>model.ResidenceAddress.DoorNo)" content-name="@Html.NameFor(model=>model.ResidenceAddress.DoorNo)">
                        <span>@Html.DisplayNameFor(model => model.ResidenceAddress.DoorNo)</span>
                    </div>
                    <div class="pdf-context-menu-item" content-id="@Html.IdFor(model=>model.ResidenceAddress.BuildingName)" content-name="@Html.NameFor(model=>model.ResidenceAddress.BuildingName)">
                        <span>@Html.DisplayNameFor(model => model.ResidenceAddress.BuildingName)</span>
                    </div>
                    <div class="pdf-context-menu-item" content-id="@Html.IdFor(model=>model.ResidenceAddress.Floor)" content-name="@Html.NameFor(model=>model.ResidenceAddress.Floor)">
                        <span>@Html.DisplayNameFor(model => model.ResidenceAddress.Floor)</span>
                    </div>
                    <div class="pdf-context-menu-item" content-id="@Html.IdFor(model=>model.ResidenceAddress.PostalCode)" content-name="@Html.NameFor(model=>model.ResidenceAddress.PostalCode)">
                        <span>@Html.DisplayNameFor(model => model.ResidenceAddress.PostalCode)</span>
                    </div>
                    <div class="pdf-context-menu-item" content-id="@Html.IdFor(model=>model.ResidenceAddress.BBK)" content-name="@Html.NameFor(model=>model.ResidenceAddress.BBK)">
                        <span>@Html.DisplayNameFor(model => model.ResidenceAddress.BBK)</span>
                    </div>
                </div>
            </div>
            <div class="pdf-context-menu-item root-item">
                <span>@Html.DisplayNameFor(model => model.SubscriptionAddress)</span>
                <div class="pdf-context-menu-container">
                    <div class="pdf-context-menu-item" content-id="@Html.IdFor(model=>model.SubscriptionAddress.ProvinceName)" content-name="@Html.NameFor(model=>model.SubscriptionAddress.ProvinceName)">
                        <span>@Html.DisplayNameFor(model => model.SubscriptionAddress.ProvinceName)</span>
                    </div>
                    <div class="pdf-context-menu-item" content-id="@Html.IdFor(model=>model.SubscriptionAddress.DistrictName)" content-name="@Html.NameFor(model=>model.SubscriptionAddress.DistrictName)">
                        <span>@Html.DisplayNameFor(model => model.SubscriptionAddress.DistrictName)</span>
                    </div>
                    <div class="pdf-context-menu-item" content-id="@Html.IdFor(model=>model.SubscriptionAddress.NeighborhoodName)" content-name="@Html.NameFor(model=>model.SubscriptionAddress.NeighborhoodName)">
                        <span>@Html.DisplayNameFor(model => model.SubscriptionAddress.NeighborhoodName)</span>
                    </div>
                    <div class="pdf-context-menu-item" content-id="@Html.IdFor(model=>model.SubscriptionAddress.StreetName)" content-name="@Html.NameFor(model=>model.SubscriptionAddress.StreetName)">
                        <span>@Html.DisplayNameFor(model => model.SubscriptionAddress.StreetName)</span>
                    </div>
                    <div class="pdf-context-menu-item" content-id="@Html.IdFor(model=>model.SubscriptionAddress.BuildingNo)" content-name="@Html.NameFor(model=>model.SubscriptionAddress.BuildingNo)">
                        <span>@Html.DisplayNameFor(model => model.SubscriptionAddress.BuildingNo)</span>
                    </div>
                    <div class="pdf-context-menu-item" content-id="@Html.IdFor(model=>model.SubscriptionAddress.DoorNo)" content-name="@Html.NameFor(model=>model.SubscriptionAddress.DoorNo)">
                        <span>@Html.DisplayNameFor(model => model.SubscriptionAddress.DoorNo)</span>
                    </div>
                    <div class="pdf-context-menu-item" content-id="@Html.IdFor(model=>model.SubscriptionAddress.BuildingName)" content-name="@Html.NameFor(model=>model.SubscriptionAddress.BuildingName)">
                        <span>@Html.DisplayNameFor(model => model.SubscriptionAddress.BuildingName)</span>
                    </div>
                    <div class="pdf-context-menu-item" content-id="@Html.IdFor(model=>model.SubscriptionAddress.Floor)" content-name="@Html.NameFor(model=>model.SubscriptionAddress.Floor)">
                        <span>@Html.DisplayNameFor(model => model.SubscriptionAddress.Floor)</span>
                    </div>
                    <div class="pdf-context-menu-item" content-id="@Html.IdFor(model=>model.SubscriptionAddress.PostalCode)" content-name="@Html.NameFor(model=>model.SubscriptionAddress.PostalCode)">
                        <span>@Html.DisplayNameFor(model => model.SubscriptionAddress.PostalCode)</span>
                    </div>
                    <div class="pdf-context-menu-item" content-id="@Html.IdFor(model=>model.SubscriptionAddress.BBK)" content-name="@Html.NameFor(model=>model.SubscriptionAddress.BBK)">
                        <span>@Html.DisplayNameFor(model => model.SubscriptionAddress.BBK)</span>
                    </div>
                </div>
            </div>
            <div class="pdf-context-menu-item" content-id="@Html.IdFor(model=>model.PSTN)" content-name="@Html.NameFor(model=>model.PSTN)">
                <span>@Html.DisplayNameFor(model => model.PSTN)</span>
            </div>
            <div class="pdf-context-menu-item root-item">
                <span>@Html.DisplayNameFor(model => model.LandPhone)</span>
                <div class="pdf-context-menu-container">
                    <div class="pdf-context-menu-item" content-id="@Html.IdFor(model=>model.LandPhone.Yes)" content-name="@Html.NameFor(model=>model.LandPhone.Yes)">
                        <span>@Html.DisplayNameFor(model => model.LandPhone.Yes)</span>
                    </div>
                    <div class="pdf-context-menu-item" content-id="@Html.IdFor(model=>model.LandPhone.No)" content-name="@Html.NameFor(model=>model.LandPhone.No)">
                        <span>@Html.DisplayNameFor(model => model.LandPhone.No)</span>
                    </div>
                </div>
            </div>
            <div class="pdf-context-menu-item" content-id="@Html.IdFor(model=>model.TariffName)" content-name="@Html.NameFor(model=>model.TariffName)">
                <span>@Html.DisplayNameFor(model => model.TariffName)</span>
            </div>
            <div class="pdf-context-menu-item" content-id="@Html.IdFor(model=>model.CompanyTitle)" content-name="@Html.NameFor(model=>model.CompanyTitle)">
                <span>@Html.DisplayNameFor(model => model.CompanyTitle)</span>
            </div>
            <div class="pdf-context-menu-item" content-id="@Html.IdFor(model=>model.TaxOffice)" content-name="@Html.NameFor(model=>model.TaxOffice)">
                <span>@Html.DisplayNameFor(model => model.TaxOffice)</span>
            </div>
            <div class="pdf-context-menu-item" content-id="@Html.IdFor(model=>model.TaxNo)" content-name="@Html.NameFor(model=>model.TaxNo)">
                <span>@Html.DisplayNameFor(model => model.TaxNo)</span>
            </div>
            <div class="pdf-context-menu-item" content-id="@Html.IdFor(model=>model.TCKAndTaxNo)" content-name="@Html.NameFor(model=>model.TCKAndTaxNo)">
                <span>@Html.DisplayNameFor(model => model.TCKAndTaxNo)</span>
            </div>
            <div class="pdf-context-menu-item" content-id="@Html.IdFor(model=>model.FirstAndLastName)" content-name="@Html.NameFor(model=>model.FirstAndLastName)">
                <span>@Html.DisplayNameFor(model => model.FirstAndLastName)</span>
            </div>
            <div class="pdf-context-menu-item" content-id="@Html.IdFor(model=>model.DisplayName)" content-name="@Html.NameFor(model=>model.DisplayName)">
                <span>@Html.DisplayNameFor(model => model.DisplayName)</span>
            </div>
            <div class="pdf-context-menu-item" content-id="@Html.IdFor(model=>model.CentralSystemNo)" content-name="@Html.NameFor(model=>model.CentralSystemNo)">
                <span>@Html.DisplayNameFor(model => model.CentralSystemNo)</span>
            </div>
            <div class="pdf-context-menu-item" content-id="@Html.IdFor(model=>model.TradeRegistrationNo)" content-name="@Html.NameFor(model=>model.TradeRegistrationNo)">
                <span>@Html.DisplayNameFor(model => model.TradeRegistrationNo)</span>
            </div>
            <div class="pdf-context-menu-item" content-id="@Html.IdFor(model=>model.BillingAddress)" content-name="@Html.NameFor(model=>model.BillingAddress)">
                <span>@Html.DisplayNameFor(model => model.BillingAddress)</span>
            </div>
            <div class="pdf-context-menu-item" content-id="@Html.IdFor(model=>model.XDSLNo)" content-name="@Html.NameFor(model=>model.XDSLNo)">
                <span>@Html.DisplayNameFor(model => model.XDSLNo)</span>
            </div>
            <div class="pdf-context-menu-item" content-id="@Html.IdFor(model=>model.TransitionSourceOperator)" content-name="@Html.NameFor(model=>model.TransitionSourceOperator)">
                <span>@Html.DisplayNameFor(model => model.TransitionSourceOperator)</span>
            </div>
        </div>
        <!--Context menu-->
        <!--Loaded Items-->
        @if (Model.TransferAction != null)
        {
            if (Model.TransferAction.TransferringSubscription != null)
            {
                if (Model.TransferAction.TransferringSubscription.SubscriberNo != null)
                {
                    <span id="@Html.IdFor(model=>model.TransferAction.TransferringSubscription.SubscriberNo)" class="pdf-template-item-view" content-name="@Html.NameFor(model => model.TransferAction.TransferringSubscription.SubscriberNo)" content-position-x="@Model.TransferAction.TransferringSubscription.SubscriberNo.X" content-position-y="@Model.TransferAction.TransferringSubscription.SubscriberNo.Y">@Html.DisplayNameFor(model => model.TransferAction.TransferringSubscription.SubscriberNo)</span>
                }
                if (Model.TransferAction.TransferringSubscription.FirstName != null)
                {
                    <span id="@Html.IdFor(model=>model.TransferAction.TransferringSubscription.FirstName)" class="pdf-template-item-view" content-name="@Html.NameFor(model => model.TransferAction.TransferringSubscription.FirstName)" content-position-x="@Model.TransferAction.TransferringSubscription.FirstName.X" content-position-y="@Model.TransferAction.TransferringSubscription.FirstName.Y">@Html.DisplayNameFor(model => model.TransferAction.TransferringSubscription.FirstName)</span>
                }
                if (Model.TransferAction.TransferringSubscription.LastName != null)
                {
                    <span id="@Html.IdFor(model=>model.TransferAction.TransferringSubscription.LastName)" class="pdf-template-item-view" content-name="@Html.NameFor(model => model.TransferAction.TransferringSubscription.LastName)" content-position-x="@Model.TransferAction.TransferringSubscription.LastName.X" content-position-y="@Model.TransferAction.TransferringSubscription.LastName.Y">@Html.DisplayNameFor(model => model.TransferAction.TransferringSubscription.LastName)</span>
                }
                if (Model.TransferAction.TransferringSubscription.FirstAndLastName != null)
                {
                    <span id="@Html.IdFor(model=>model.TransferAction.TransferringSubscription.FirstAndLastName)" class="pdf-template-item-view" content-name="@Html.NameFor(model => model.TransferAction.TransferringSubscription.FirstAndLastName)" content-position-x="@Model.TransferAction.TransferringSubscription.FirstAndLastName.X" content-position-y="@Model.TransferAction.TransferringSubscription.FirstAndLastName.Y">@Html.DisplayNameFor(model => model.TransferAction.TransferringSubscription.FirstAndLastName)</span>
                }
                if (Model.TransferAction.TransferringSubscription.CompanyTitle != null)
                {
                    <span id="@Html.IdFor(model=>model.TransferAction.TransferringSubscription.CompanyTitle)" class="pdf-template-item-view" content-name="@Html.NameFor(model => model.TransferAction.TransferringSubscription.CompanyTitle)" content-position-x="@Model.TransferAction.TransferringSubscription.CompanyTitle.X" content-position-y="@Model.TransferAction.TransferringSubscription.CompanyTitle.Y">@Html.DisplayNameFor(model => model.TransferAction.TransferringSubscription.CompanyTitle)</span>
                }
                if (Model.TransferAction.TransferringSubscription.DisplayName != null)
                {
                    <span id="@Html.IdFor(model=>model.TransferAction.TransferringSubscription.DisplayName)" class="pdf-template-item-view" content-name="@Html.NameFor(model => model.TransferAction.TransferringSubscription.DisplayName)" content-position-x="@Model.TransferAction.TransferringSubscription.DisplayName.X" content-position-y="@Model.TransferAction.TransferringSubscription.DisplayName.Y">@Html.DisplayNameFor(model => model.TransferAction.TransferringSubscription.DisplayName)</span>
                }
                if (Model.TransferAction.TransferringSubscription.TCKNo != null)
                {
                    <span id="@Html.IdFor(model=>model.TransferAction.TransferringSubscription.TCKNo)" class="pdf-template-item-view" content-name="@Html.NameFor(model => model.TransferAction.TransferringSubscription.TCKNo)" content-position-x="@Model.TransferAction.TransferringSubscription.TCKNo.X" content-position-y="@Model.TransferAction.TransferringSubscription.TCKNo.Y">@Html.DisplayNameFor(model => model.TransferAction.TransferringSubscription.TCKNo)</span>
                }
                if (Model.TransferAction.TransferringSubscription.TaxNo != null)
                {
                    <span id="@Html.IdFor(model=>model.TransferAction.TransferringSubscription.TaxNo)" class="pdf-template-item-view" content-name="@Html.NameFor(model => model.TransferAction.TransferringSubscription.TaxNo)" content-position-x="@Model.TransferAction.TransferringSubscription.TaxNo.X" content-position-y="@Model.TransferAction.TransferringSubscription.TaxNo.Y">@Html.DisplayNameFor(model => model.TransferAction.TransferringSubscription.TaxNo)</span>
                }
                if (Model.TransferAction.TransferringSubscription.TCKAndTaxNo != null)
                {
                    <span id="@Html.IdFor(model=>model.TransferAction.TransferringSubscription.TCKAndTaxNo)" class="pdf-template-item-view" content-name="@Html.NameFor(model => model.TransferAction.TransferringSubscription.TCKAndTaxNo)" content-position-x="@Model.TransferAction.TransferringSubscription.TCKAndTaxNo.X" content-position-y="@Model.TransferAction.TransferringSubscription.TCKAndTaxNo.Y">@Html.DisplayNameFor(model => model.TransferAction.TransferringSubscription.TCKAndTaxNo)</span>
                }
            }
            if (Model.TransferAction.TransferredSubscription != null)
            {
                if (Model.TransferAction.TransferredSubscription.SubscriberNo != null)
                {
                    <span id="@Html.IdFor(model=>model.TransferAction.TransferredSubscription.SubscriberNo)" class="pdf-template-item-view" content-name="@Html.NameFor(model => model.TransferAction.TransferredSubscription.SubscriberNo)" content-position-x="@Model.TransferAction.TransferredSubscription.SubscriberNo.X" content-position-y="@Model.TransferAction.TransferredSubscription.SubscriberNo.Y">@Html.DisplayNameFor(model => model.TransferAction.TransferredSubscription.SubscriberNo)</span>
                }
                if (Model.TransferAction.TransferredSubscription.FirstName != null)
                {
                    <span id="@Html.IdFor(model=>model.TransferAction.TransferredSubscription.FirstName)" class="pdf-template-item-view" content-name="@Html.NameFor(model => model.TransferAction.TransferredSubscription.FirstName)" content-position-x="@Model.TransferAction.TransferredSubscription.FirstName.X" content-position-y="@Model.TransferAction.TransferredSubscription.FirstName.Y">@Html.DisplayNameFor(model => model.TransferAction.TransferredSubscription.FirstName)</span>
                }
                if (Model.TransferAction.TransferredSubscription.LastName != null)
                {
                    <span id="@Html.IdFor(model=>model.TransferAction.TransferredSubscription.LastName)" class="pdf-template-item-view" content-name="@Html.NameFor(model => model.TransferAction.TransferredSubscription.LastName)" content-position-x="@Model.TransferAction.TransferredSubscription.LastName.X" content-position-y="@Model.TransferAction.TransferredSubscription.LastName.Y">@Html.DisplayNameFor(model => model.TransferAction.TransferredSubscription.LastName)</span>
                }
                if (Model.TransferAction.TransferredSubscription.FirstAndLastName != null)
                {
                    <span id="@Html.IdFor(model=>model.TransferAction.TransferredSubscription.FirstAndLastName)" class="pdf-template-item-view" content-name="@Html.NameFor(model => model.TransferAction.TransferredSubscription.FirstAndLastName)" content-position-x="@Model.TransferAction.TransferredSubscription.FirstAndLastName.X" content-position-y="@Model.TransferAction.TransferredSubscription.FirstAndLastName.Y">@Html.DisplayNameFor(model => model.TransferAction.TransferredSubscription.FirstAndLastName)</span>
                }
                if (Model.TransferAction.TransferredSubscription.CompanyTitle != null)
                {
                    <span id="@Html.IdFor(model=>model.TransferAction.TransferredSubscription.CompanyTitle)" class="pdf-template-item-view" content-name="@Html.NameFor(model => model.TransferAction.TransferredSubscription.CompanyTitle)" content-position-x="@Model.TransferAction.TransferredSubscription.CompanyTitle.X" content-position-y="@Model.TransferAction.TransferredSubscription.CompanyTitle.Y">@Html.DisplayNameFor(model => model.TransferAction.TransferredSubscription.CompanyTitle)</span>
                }
                if (Model.TransferAction.TransferredSubscription.DisplayName != null)
                {
                    <span id="@Html.IdFor(model=>model.TransferAction.TransferredSubscription.DisplayName)" class="pdf-template-item-view" content-name="@Html.NameFor(model => model.TransferAction.TransferredSubscription.DisplayName)" content-position-x="@Model.TransferAction.TransferredSubscription.DisplayName.X" content-position-y="@Model.TransferAction.TransferredSubscription.DisplayName.Y">@Html.DisplayNameFor(model => model.TransferAction.TransferredSubscription.DisplayName)</span>
                }
                if (Model.TransferAction.TransferredSubscription.TCKNo != null)
                {
                    <span id="@Html.IdFor(model=>model.TransferAction.TransferredSubscription.TCKNo)" class="pdf-template-item-view" content-name="@Html.NameFor(model => model.TransferAction.TransferredSubscription.TCKNo)" content-position-x="@Model.TransferAction.TransferredSubscription.TCKNo.X" content-position-y="@Model.TransferAction.TransferredSubscription.TCKNo.Y">@Html.DisplayNameFor(model => model.TransferAction.TransferredSubscription.TCKNo)</span>
                }
                if (Model.TransferAction.TransferredSubscription.TaxNo != null)
                {
                    <span id="@Html.IdFor(model=>model.TransferAction.TransferredSubscription.TaxNo)" class="pdf-template-item-view" content-name="@Html.NameFor(model => model.TransferAction.TransferredSubscription.TaxNo)" content-position-x="@Model.TransferAction.TransferredSubscription.TaxNo.X" content-position-y="@Model.TransferAction.TransferredSubscription.TaxNo.Y">@Html.DisplayNameFor(model => model.TransferAction.TransferredSubscription.TaxNo)</span>
                }
                if (Model.TransferAction.TransferredSubscription.TCKAndTaxNo != null)
                {
                    <span id="@Html.IdFor(model=>model.TransferAction.TransferredSubscription.TCKAndTaxNo)" class="pdf-template-item-view" content-name="@Html.NameFor(model => model.TransferAction.TransferredSubscription.TCKAndTaxNo)" content-position-x="@Model.TransferAction.TransferredSubscription.TCKAndTaxNo.X" content-position-y="@Model.TransferAction.TransferredSubscription.TCKAndTaxNo.Y">@Html.DisplayNameFor(model => model.TransferAction.TransferredSubscription.TCKAndTaxNo)</span>
                }
            }
        }
        @if (Model.SubscriberNo != null)
        {
            <span id="@Html.IdFor(model=>model.SubscriberNo)" class="pdf-template-item-view" content-name="@Html.NameFor(model => model.SubscriberNo)" content-position-x="@Model.SubscriberNo.X" content-position-y="@Model.SubscriberNo.Y">@Html.DisplayNameFor(model => model.SubscriberNo)</span>
        }
        @if (Model.FirstName != null)
        {
            <span id="@Html.IdFor(model=>model.FirstName)" class="pdf-template-item-view" content-name="@Html.NameFor(model => model.FirstName)" content-position-x="@Model.FirstName.X" content-position-y="@Model.FirstName.Y">@Html.DisplayNameFor(model => model.FirstName)</span>
        }
        @if (Model.LastName != null)
        {
            <span id="@Html.IdFor(model=>model.LastName)" class="pdf-template-item-view" content-name="@Html.NameFor(model => model.LastName)" content-position-x="@Model.LastName.X" content-position-y="@Model.LastName.Y">@Html.DisplayNameFor(model => model.LastName)</span>
        }
        @if (Model.MothersName != null)
        {
            <span id="@Html.IdFor(model=>model.MothersName)" class="pdf-template-item-view" content-name="@Html.NameFor(model => model.MothersName)" content-position-x="@Model.MothersName.X" content-position-y="@Model.MothersName.Y">@Html.DisplayNameFor(model => model.MothersName)</span>
        }
        @if (Model.FathersName != null)
        {
            <span id="@Html.IdFor(model=>model.FathersName)" class="pdf-template-item-view" content-name="@Html.NameFor(model => model.FathersName)" content-position-x="@Model.FathersName.X" content-position-y="@Model.FathersName.Y">@Html.DisplayNameFor(model => model.FathersName)</span>
        }
        @if (Model.BirthDate != null)
        {
            <span id="@Html.IdFor(model=>model.BirthDate)" class="pdf-template-item-view" content-name="@Html.NameFor(model => model.BirthDate)" content-position-x="@Model.BirthDate.X" content-position-y="@Model.BirthDate.Y">@Html.DisplayNameFor(model => model.BirthDate)</span>
        }
        @if (Model.BirthPlace != null)
        {
            <span id="@Html.IdFor(model=>model.BirthPlace)" class="pdf-template-item-view" content-name="@Html.NameFor(model => model.BirthPlace)" content-position-x="@Model.BirthPlace.X" content-position-y="@Model.BirthPlace.Y">@Html.DisplayNameFor(model => model.BirthPlace)</span>
        }
        @if (Model.TCKNo != null)
        {
            <span id="@Html.IdFor(model=>model.TCKNo)" class="pdf-template-item-view" content-name="@Html.NameFor(model => model.TCKNo)" content-position-x="@Model.TCKNo.X" content-position-y="@Model.TCKNo.Y">@Html.DisplayNameFor(model => model.TCKNo)</span>
        }
        @if (Model.Nationality != null)
        {
            <span id="@Html.IdFor(model=>model.Nationality)" class="pdf-template-item-view" content-name="@Html.NameFor(model => model.Nationality)" content-position-x="@Model.Nationality.X" content-position-y="@Model.Nationality.Y">@Html.DisplayNameFor(model => model.Nationality)</span>
        }
        @if (Model.Profession != null)
        {
            <span id="@Html.IdFor(model=>model.Profession)" class="pdf-template-item-view" content-name="@Html.NameFor(model => model.Profession)" content-position-x="@Model.Profession.X" content-position-y="@Model.Profession.Y">@Html.DisplayNameFor(model => model.Profession)</span>
        }
        @if (Model.MothersMaidenName != null)
        {
            <span id="@Html.IdFor(model=>model.MothersMaidenName)" class="pdf-template-item-view" content-name="@Html.NameFor(model => model.MothersMaidenName)" content-position-x="@Model.MothersMaidenName.X" content-position-y="@Model.MothersMaidenName.Y">@Html.DisplayNameFor(model => model.MothersMaidenName)</span>
        }
        @if (Model.Sexes != null)
        {
            if (Model.Sexes.Male != null)
            {
                <span id="@Html.IdFor(model=>model.Sexes.Male)" class="pdf-template-item-view" content-name="@Html.NameFor(model => model.Sexes.Male)" content-position-x="@Model.Sexes.Male.X" content-position-y="@Model.Sexes.Male.Y">@Html.DisplayNameFor(model => model.Sexes.Male)</span>
            }
            if (Model.Sexes.Female != null)
            {
                <span id="@Html.IdFor(model=>model.Sexes.Female)" class="pdf-template-item-view" content-name="@Html.NameFor(model => model.Sexes.Female)" content-position-x="@Model.Sexes.Female.X" content-position-y="@Model.Sexes.Female.Y">@Html.DisplayNameFor(model => model.Sexes.Female)</span>
            }
        }
        @if (Model.ContactPhoneNo != null)
        {
            <span id="@Html.IdFor(model=>model.ContactPhoneNo)" class="pdf-template-item-view" content-name="@Html.NameFor(model => model.ContactPhoneNo)" content-position-x="@Model.ContactPhoneNo.X" content-position-y="@Model.ContactPhoneNo.Y">@Html.DisplayNameFor(model => model.ContactPhoneNo)</span>
        }
        @if (Model.Email != null)
        {
            <span id="@Html.IdFor(model=>model.Email)" class="pdf-template-item-view" content-name="@Html.NameFor(model => model.Email)" content-position-x="@Model.Email.X" content-position-y="@Model.Email.Y">@Html.DisplayNameFor(model => model.Email)</span>
        }
        @if (Model.ResidenceAddress != null)
        {
            if (Model.ResidenceAddress.ProvinceName != null)
            {
                <span id="@Html.IdFor(model=>model.ResidenceAddress.ProvinceName)" class="pdf-template-item-view" content-name="@Html.NameFor(model => model.ResidenceAddress.ProvinceName)" content-position-x="@Model.ResidenceAddress.ProvinceName.X" content-position-y="@Model.ResidenceAddress.ProvinceName.Y">@Html.DisplayNameFor(model => model.ResidenceAddress.ProvinceName)</span>
            }
            if (Model.ResidenceAddress.DistrictName != null)
            {
                <span id="@Html.IdFor(model=>model.ResidenceAddress.DistrictName)" class="pdf-template-item-view" content-name="@Html.NameFor(model => model.ResidenceAddress.DistrictName)" content-position-x="@Model.ResidenceAddress.DistrictName.X" content-position-y="@Model.ResidenceAddress.DistrictName.Y">@Html.DisplayNameFor(model => model.ResidenceAddress.DistrictName)</span>
            }
            if (Model.ResidenceAddress.NeighborhoodName != null)
            {
                <span id="@Html.IdFor(model=>model.ResidenceAddress.NeighborhoodName)" class="pdf-template-item-view" content-name="@Html.NameFor(model => model.ResidenceAddress.NeighborhoodName)" content-position-x="@Model.ResidenceAddress.NeighborhoodName.X" content-position-y="@Model.ResidenceAddress.NeighborhoodName.Y">@Html.DisplayNameFor(model => model.ResidenceAddress.NeighborhoodName)</span>
            }
            if (Model.ResidenceAddress.StreetName != null)
            {
                <span id="@Html.IdFor(model=>model.ResidenceAddress.StreetName)" class="pdf-template-item-view" content-name="@Html.NameFor(model => model.ResidenceAddress.StreetName)" content-position-x="@Model.ResidenceAddress.StreetName.X" content-position-y="@Model.ResidenceAddress.StreetName.Y">@Html.DisplayNameFor(model => model.ResidenceAddress.StreetName)</span>
            }
            if (Model.ResidenceAddress.BuildingNo != null)
            {
                <span id="@Html.IdFor(model=>model.ResidenceAddress.BuildingNo)" class="pdf-template-item-view" content-name="@Html.NameFor(model => model.ResidenceAddress.BuildingNo)" content-position-x="@Model.ResidenceAddress.BuildingNo.X" content-position-y="@Model.ResidenceAddress.BuildingNo.Y">@Html.DisplayNameFor(model => model.ResidenceAddress.BuildingNo)</span>
            }
            if (Model.ResidenceAddress.DoorNo != null)
            {
                <span id="@Html.IdFor(model=>model.ResidenceAddress.DoorNo)" class="pdf-template-item-view" content-name="@Html.NameFor(model => model.ResidenceAddress.DoorNo)" content-position-x="@Model.ResidenceAddress.DoorNo.X" content-position-y="@Model.ResidenceAddress.DoorNo.Y">@Html.DisplayNameFor(model => model.ResidenceAddress.DoorNo)</span>
            }
            if (Model.ResidenceAddress.BuildingName != null)
            {
                <span id="@Html.IdFor(model=>model.ResidenceAddress.BuildingName)" class="pdf-template-item-view" content-name="@Html.NameFor(model => model.ResidenceAddress.BuildingName)" content-position-x="@Model.ResidenceAddress.BuildingName.X" content-position-y="@Model.ResidenceAddress.BuildingName.Y">@Html.DisplayNameFor(model => model.ResidenceAddress.BuildingName)</span>
            }
            if (Model.ResidenceAddress.Floor != null)
            {
                <span id="@Html.IdFor(model=>model.ResidenceAddress.Floor)" class="pdf-template-item-view" content-name="@Html.NameFor(model => model.ResidenceAddress.Floor)" content-position-x="@Model.ResidenceAddress.Floor.X" content-position-y="@Model.ResidenceAddress.Floor.Y">@Html.DisplayNameFor(model => model.ResidenceAddress.Floor)</span>
            }
            if (Model.ResidenceAddress.PostalCode != null)
            {
                <span id="@Html.IdFor(model=>model.ResidenceAddress.PostalCode)" class="pdf-template-item-view" content-name="@Html.NameFor(model => model.ResidenceAddress.PostalCode)" content-position-x="@Model.ResidenceAddress.PostalCode.X" content-position-y="@Model.ResidenceAddress.PostalCode.Y">@Html.DisplayNameFor(model => model.ResidenceAddress.PostalCode)</span>
            }
            if (Model.ResidenceAddress.BBK != null)
            {
                <span id="@Html.IdFor(model=>model.ResidenceAddress.BBK)" class="pdf-template-item-view" content-name="@Html.NameFor(model => model.ResidenceAddress.BBK)" content-position-x="@Model.ResidenceAddress.BBK.X" content-position-y="@Model.ResidenceAddress.BBK.Y">@Html.DisplayNameFor(model => model.ResidenceAddress.BBK)</span>
            }
        }
        @if (Model.SubscriptionAddress != null)
        {
            if (Model.SubscriptionAddress.ProvinceName != null)
            {
                <span id="@Html.IdFor(model=>model.SubscriptionAddress.ProvinceName)" class="pdf-template-item-view" content-name="@Html.NameFor(model => model.SubscriptionAddress.ProvinceName)" content-position-x="@Model.SubscriptionAddress.ProvinceName.X" content-position-y="@Model.SubscriptionAddress.ProvinceName.Y">@Html.DisplayNameFor(model => model.SubscriptionAddress.ProvinceName)</span>
            }
            if (Model.SubscriptionAddress.DistrictName != null)
            {
                <span id="@Html.IdFor(model=>model.SubscriptionAddress.DistrictName)" class="pdf-template-item-view" content-name="@Html.NameFor(model => model.SubscriptionAddress.DistrictName)" content-position-x="@Model.SubscriptionAddress.DistrictName.X" content-position-y="@Model.SubscriptionAddress.DistrictName.Y">@Html.DisplayNameFor(model => model.SubscriptionAddress.DistrictName)</span>
            }
            if (Model.SubscriptionAddress.NeighborhoodName != null)
            {
                <span id="@Html.IdFor(model=>model.SubscriptionAddress.NeighborhoodName)" class="pdf-template-item-view" content-name="@Html.NameFor(model => model.SubscriptionAddress.NeighborhoodName)" content-position-x="@Model.SubscriptionAddress.NeighborhoodName.X" content-position-y="@Model.SubscriptionAddress.NeighborhoodName.Y">@Html.DisplayNameFor(model => model.SubscriptionAddress.NeighborhoodName)</span>
            }
            if (Model.SubscriptionAddress.StreetName != null)
            {
                <span id="@Html.IdFor(model=>model.SubscriptionAddress.StreetName)" class="pdf-template-item-view" content-name="@Html.NameFor(model => model.SubscriptionAddress.StreetName)" content-position-x="@Model.SubscriptionAddress.StreetName.X" content-position-y="@Model.SubscriptionAddress.StreetName.Y">@Html.DisplayNameFor(model => model.SubscriptionAddress.StreetName)</span>
            }
            if (Model.SubscriptionAddress.BuildingNo != null)
            {
                <span id="@Html.IdFor(model=>model.SubscriptionAddress.BuildingNo)" class="pdf-template-item-view" content-name="@Html.NameFor(model => model.SubscriptionAddress.BuildingNo)" content-position-x="@Model.SubscriptionAddress.BuildingNo.X" content-position-y="@Model.SubscriptionAddress.BuildingNo.Y">@Html.DisplayNameFor(model => model.SubscriptionAddress.BuildingNo)</span>
            }
            if (Model.SubscriptionAddress.DoorNo != null)
            {
                <span id="@Html.IdFor(model=>model.SubscriptionAddress.DoorNo)" class="pdf-template-item-view" content-name="@Html.NameFor(model => model.SubscriptionAddress.DoorNo)" content-position-x="@Model.SubscriptionAddress.DoorNo.X" content-position-y="@Model.SubscriptionAddress.DoorNo.Y">@Html.DisplayNameFor(model => model.SubscriptionAddress.DoorNo)</span>
            }
            if (Model.SubscriptionAddress.BuildingName != null)
            {
                <span id="@Html.IdFor(model=>model.SubscriptionAddress.BuildingName)" class="pdf-template-item-view" content-name="@Html.NameFor(model => model.SubscriptionAddress.BuildingName)" content-position-x="@Model.SubscriptionAddress.BuildingName.X" content-position-y="@Model.SubscriptionAddress.BuildingName.Y">@Html.DisplayNameFor(model => model.SubscriptionAddress.BuildingName)</span>
            }
            if (Model.SubscriptionAddress.Floor != null)
            {
                <span id="@Html.IdFor(model=>model.SubscriptionAddress.Floor)" class="pdf-template-item-view" content-name="@Html.NameFor(model => model.SubscriptionAddress.Floor)" content-position-x="@Model.SubscriptionAddress.Floor.X" content-position-y="@Model.SubscriptionAddress.Floor.Y">@Html.DisplayNameFor(model => model.SubscriptionAddress.Floor)</span>
            }
            if (Model.SubscriptionAddress.PostalCode != null)
            {
                <span id="@Html.IdFor(model=>model.SubscriptionAddress.PostalCode)" class="pdf-template-item-view" content-name="@Html.NameFor(model => model.SubscriptionAddress.PostalCode)" content-position-x="@Model.SubscriptionAddress.PostalCode.X" content-position-y="@Model.SubscriptionAddress.PostalCode.Y">@Html.DisplayNameFor(model => model.SubscriptionAddress.PostalCode)</span>
            }
            if (Model.SubscriptionAddress.BBK != null)
            {
                <span id="@Html.IdFor(model=>model.SubscriptionAddress.BBK)" class="pdf-template-item-view" content-name="@Html.NameFor(model => model.SubscriptionAddress.BBK)" content-position-x="@Model.SubscriptionAddress.BBK.X" content-position-y="@Model.SubscriptionAddress.BBK.Y">@Html.DisplayNameFor(model => model.SubscriptionAddress.BBK)</span>
            }
        }
        @if (Model.PSTN != null)
        {
            <span id="@Html.IdFor(model=>model.PSTN)" class="pdf-template-item-view" content-name="@Html.NameFor(model => model.PSTN)" content-position-x="@Model.PSTN.X" content-position-y="@Model.PSTN.Y">@Html.DisplayNameFor(model => model.PSTN)</span>
        }
        @if (Model.LandPhone != null)
        {
            if (Model.LandPhone.Yes != null)
            {
                <span id="@Html.IdFor(model=>model.LandPhone.Yes)" class="pdf-template-item-view" content-name="@Html.NameFor(model => model.LandPhone.Yes)" content-position-x="@Model.LandPhone.Yes.X" content-position-y="@Model.LandPhone.Yes.Y">@Html.DisplayNameFor(model => model.LandPhone.Yes)</span>
            }
            if (Model.LandPhone.No != null)
            {
                <span id="@Html.IdFor(model=>model.LandPhone.No)" class="pdf-template-item-view" content-name="@Html.NameFor(model => model.LandPhone.No)" content-position-x="@Model.LandPhone.No.X" content-position-y="@Model.LandPhone.No.Y">@Html.DisplayNameFor(model => model.LandPhone.No)</span>
            }
        }
        @if (Model.TariffName != null)
        {
            <span id="@Html.IdFor(model=>model.TariffName)" class="pdf-template-item-view" content-name="@Html.NameFor(model => model.TariffName)" content-position-x="@Model.TariffName.X" content-position-y="@Model.TariffName.Y">@Html.DisplayNameFor(model => model.TariffName)</span>
        }
        @if (Model.CompanyTitle != null)
        {
            <span id="@Html.IdFor(model=>model.CompanyTitle)" class="pdf-template-item-view" content-name="@Html.NameFor(model => model.CompanyTitle)" content-position-x="@Model.CompanyTitle.X" content-position-y="@Model.CompanyTitle.Y">@Html.DisplayNameFor(model => model.CompanyTitle)</span>
        }
        @if (Model.TaxOffice != null)
        {
            <span id="@Html.IdFor(model=>model.TaxOffice)" class="pdf-template-item-view" content-name="@Html.NameFor(model => model.TaxOffice)" content-position-x="@Model.TaxOffice.X" content-position-y="@Model.TaxOffice.Y">@Html.DisplayNameFor(model => model.TaxOffice)</span>
        }
        @if (Model.TaxNo != null)
        {
            <span id="@Html.IdFor(model=>model.TaxNo)" class="pdf-template-item-view" content-name="@Html.NameFor(model => model.TaxNo)" content-position-x="@Model.TaxNo.X" content-position-y="@Model.TaxNo.Y">@Html.DisplayNameFor(model => model.TaxNo)</span>
        }
        @if (Model.TCKAndTaxNo != null)
        {
            <span id="@Html.IdFor(model=>model.TCKAndTaxNo)" class="pdf-template-item-view" content-name="@Html.NameFor(model => model.TCKAndTaxNo)" content-position-x="@Model.TCKAndTaxNo.X" content-position-y="@Model.TCKAndTaxNo.Y">@Html.DisplayNameFor(model => model.TCKAndTaxNo)</span>
        }
        @if (Model.FirstAndLastName != null)
        {
            <span id="@Html.IdFor(model=>model.FirstAndLastName)" class="pdf-template-item-view" content-name="@Html.NameFor(model => model.FirstAndLastName)" content-position-x="@Model.FirstAndLastName.X" content-position-y="@Model.FirstAndLastName.Y">@Html.DisplayNameFor(model => model.FirstAndLastName)</span>
        }
        @if (Model.DisplayName != null)
        {
            <span id="@Html.IdFor(model=>model.DisplayName)" class="pdf-template-item-view" content-name="@Html.NameFor(model => model.DisplayName)" content-position-x="@Model.DisplayName.X" content-position-y="@Model.DisplayName.Y">@Html.DisplayNameFor(model => model.DisplayName)</span>
        }
        @if (Model.CentralSystemNo != null)
        {
            <span id="@Html.IdFor(model=>model.CentralSystemNo)" class="pdf-template-item-view" content-name="@Html.NameFor(model => model.CentralSystemNo)" content-position-x="@Model.CentralSystemNo.X" content-position-y="@Model.CentralSystemNo.Y">@Html.DisplayNameFor(model => model.CentralSystemNo)</span>
        }
        @if (Model.TradeRegistrationNo != null)
        {
            <span id="@Html.IdFor(model=>model.TradeRegistrationNo)" class="pdf-template-item-view" content-name="@Html.NameFor(model => model.TradeRegistrationNo)" content-position-x="@Model.TradeRegistrationNo.X" content-position-y="@Model.TradeRegistrationNo.Y">@Html.DisplayNameFor(model => model.TradeRegistrationNo)</span>
        }
        @if (Model.BillingAddress != null)
        {
            <span id="@Html.IdFor(model=>model.BillingAddress)" class="pdf-template-item-view" content-name="@Html.NameFor(model => model.BillingAddress)" content-position-x="@Model.BillingAddress.X" content-position-y="@Model.BillingAddress.Y">@Html.DisplayNameFor(model => model.BillingAddress)</span>
        }
        @if (Model.XDSLNo != null)
        {
            <span id="@Html.IdFor(model=>model.XDSLNo)" class="pdf-template-item-view" content-name="@Html.NameFor(model => model.XDSLNo)" content-position-x="@Model.XDSLNo.X" content-position-y="@Model.XDSLNo.Y">@Html.DisplayNameFor(model => model.XDSLNo)</span>
        }
        @if (Model.TransitionSourceOperator != null)
        {
            <span id="@Html.IdFor(model=>model.TransitionSourceOperator)" class="pdf-template-item-view" content-name="@Html.NameFor(model => model.TransitionSourceOperator)" content-position-x="@Model.TransitionSourceOperator.X" content-position-y="@Model.TransitionSourceOperator.Y">@Html.DisplayNameFor(model => model.TransitionSourceOperator)</span>
        }
        <!--Loaded Items-->
    </div>
                <div class="hidden-fields-container"></div>
                <div class="centered">
                    @Html.ActionLink(RadiusR.Localization.Pages.Common.Back, "Index", null, new { @class = "link-button iconed-button back-button" })
                    <input id="pdf-template-reset-button" type="button" value="@RadiusR.Localization.Pages.Common.Reset" class="link-button iconed-button clear-button" />
                    <input id="pdf-template-save-button" type="button" value="@RadiusR.Localization.Pages.Common.Save" class="link-button iconed-button save-button" />
                </div>
            }
        }
    </div>
</div>

@section PageScripts{
    <script>
        var contextPosition = null;
        var contextMenu = $('div#context-menu-root');
        var templateBoard = $('div.pdf-template-background-container');
        var pdfSaveButton = $('#pdf-template-save-button');
        var pdfResetButton = $('#pdf-template-reset-button');
        var templateSaveForm = pdfSaveButton.closest('form');
        // template background context menu
        templateBoard.bind('contextmenu', function (e) {
            e.preventDefault();
            contextPosition = {
                x: e.offsetX,
                y: e.offsetY
            };

            contextMenu.css({ top: contextPosition.y + 'px', left: contextPosition.x + 'px' });
            contextMenu.addClass('open');
        });
        // context menu closure
        $(document).click(function (e) {
            contextMenu.removeClass('open');
        });
        // context menu items click event
        contextMenu.find('div.pdf-context-menu-item:not(.root-item)').click(function (e) {
            var currentItem = $(this);
            var currentText = currentItem.children('span').first().text();
            var currentId = currentItem.attr('content-id');
            var currentName = currentItem.attr('content-name');
            // remove previous same label
            templateBoard.find('span#' + currentId).remove();
            // add new label
            templateBoard.append('<span id="' + currentId + '" class="pdf-template-item-view" content-name="' + currentName + '">' + currentText + '</span>');
            var addedLabel = templateBoard.find('span.pdf-template-item-view').last();
            addedLabel.css({ top: contextPosition.y + 'px', left: contextPosition.x + 'px' });
            // context menu removal for labels
            addedLabel.bind('contextmenu', function (e) {
                e.preventDefault();
                e.stopPropagation();
            });
            // label removal
            addedLabel.click(function (e) {
                addedLabel.remove();
            });
        });
        // save action
        pdfSaveButton.click(function (e) {
            var validItems = templateSaveForm.find('span.pdf-template-item-view');
            var hiddenContainer = templateSaveForm.find('div.hidden-fields-container');
            validItems.each(function () {
                var currentItem = $(this);
                var itemName = currentItem.attr('content-name');
                var itemCoords = { top: currentItem.position().top / parseFloat(templateBoard.height()), left: currentItem.position().left / parseFloat(templateBoard.width()) };
                var newInputs = "<input type='hidden' name='" + itemName + ".X' value='" + itemCoords.left + "' /> <input type='hidden' name='" + itemName + ".Y' value='" + itemCoords.top + "' />";
                hiddenContainer.append(newInputs);
            });

            templateSaveForm.submit();
        });
        // reset button action
        pdfResetButton.click(function () {
            templateBoard.find('span.pdf-template-item-view').remove();
        });
        // load placements
        templateBoard.find('img.pdf-template-background').bind('load', function () {
            templateBoard.find('span.pdf-template-item-view').each(function () {
                var current = $(this);
                var currentPosition = { left: Math.round(templateBoard.width() * parseFloat(current.attr('content-position-x'))), top: Math.round(templateBoard.height() * parseFloat(current.attr('content-position-y'))) };
                current.css({ left: currentPosition.left + 'px', top: currentPosition.top + 'px' });
                current.click(function (e) {
                    current.remove();
                });
            });
        });
    </script>
}