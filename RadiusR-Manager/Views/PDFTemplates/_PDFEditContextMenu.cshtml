@using RadiusR_Manager.Helpers

@{
    var contextModel = new RadiusR_Manager.Models.ViewModels.PDFTemplates.PDFEditContextMenuViewModel();
}

<!--Context menu-->
<div class="pdf-context-menu-container" id="context-menu-root">
    <div class="pdf-context-menu-item root-item">
        <span>@Html.DisplayNameFor(model => contextModel.TransferAction)</span>
        <div class="pdf-context-menu-container">
            <div class="pdf-context-menu-item root-item">
                <span>@Html.DisplayNameFor(model => contextModel.TransferAction.TransferringSubscription)</span>
                <div class="pdf-context-menu-container">
                    @Html.PDFContextMenuItemFor(model => contextModel.TransferAction.TransferringSubscription.SubscriberNo)
                    @Html.PDFContextMenuItemFor(model => contextModel.TransferAction.TransferringSubscription.FirstName)
                    @Html.PDFContextMenuItemFor(model => contextModel.TransferAction.TransferringSubscription.LastName)
                    @Html.PDFContextMenuItemFor(model => contextModel.TransferAction.TransferringSubscription.FirstAndLastName)
                    @Html.PDFContextMenuItemFor(model => contextModel.TransferAction.TransferringSubscription.CompanyTitle)
                    @Html.PDFContextMenuItemFor(model => contextModel.TransferAction.TransferringSubscription.DisplayName)
                    @Html.PDFContextMenuItemFor(model => contextModel.TransferAction.TransferringSubscription.TCKNo)
                    @Html.PDFContextMenuItemFor(model => contextModel.TransferAction.TransferringSubscription.TaxNo)
                    @Html.PDFContextMenuItemFor(model => contextModel.TransferAction.TransferringSubscription.TCKAndTaxNo)
                </div>
            </div>
            <div class="pdf-context-menu-item root-item">
                <span>@Html.DisplayNameFor(model => contextModel.TransferAction.TransferredSubscription)</span>
                <div class="pdf-context-menu-container">
                    @Html.PDFContextMenuItemFor(model => contextModel.TransferAction.TransferredSubscription.SubscriberNo)
                    @Html.PDFContextMenuItemFor(model => contextModel.TransferAction.TransferredSubscription.FirstName)
                    @Html.PDFContextMenuItemFor(model => contextModel.TransferAction.TransferredSubscription.LastName)
                    @Html.PDFContextMenuItemFor(model => contextModel.TransferAction.TransferredSubscription.FirstAndLastName)
                    @Html.PDFContextMenuItemFor(model => contextModel.TransferAction.TransferredSubscription.CompanyTitle)
                    @Html.PDFContextMenuItemFor(model => contextModel.TransferAction.TransferredSubscription.DisplayName)
                    @Html.PDFContextMenuItemFor(model => contextModel.TransferAction.TransferredSubscription.TCKNo)
                    @Html.PDFContextMenuItemFor(model => contextModel.TransferAction.TransferredSubscription.TaxNo)
                    @Html.PDFContextMenuItemFor(model => contextModel.TransferAction.TransferredSubscription.TCKAndTaxNo)
                </div>
            </div>
        </div>
    </div>
    @Html.PDFContextMenuItemFor(model => contextModel.SubscriberNo)
    @Html.PDFContextMenuItemFor(model => contextModel.FirstName)
    @Html.PDFContextMenuItemFor(model => contextModel.LastName)
    @Html.PDFContextMenuItemFor(model => contextModel.MothersName)
    @Html.PDFContextMenuItemFor(model => contextModel.MothersMaidenName)
    @Html.PDFContextMenuItemFor(model => contextModel.FathersName)
    @Html.PDFContextMenuItemFor(model => contextModel.BirthDate)
    @Html.PDFContextMenuItemFor(model => contextModel.BirthPlace)
    @Html.PDFContextMenuItemFor(model => contextModel.TCKNo)
    @Html.PDFContextMenuItemFor(model => contextModel.Nationality)
    @Html.PDFContextMenuItemFor(model => contextModel.Profession)
    <div class="pdf-context-menu-item root-item">
        <span>@Html.DisplayNameFor(model => contextModel.Sexes)</span>
        <div class="pdf-context-menu-container">
            @Html.PDFContextMenuItemFor(model => contextModel.Sexes.Male)
            @Html.PDFContextMenuItemFor(model => contextModel.Sexes.Female)
        </div>
    </div>
    @Html.PDFContextMenuItemFor(model => contextModel.ContactPhoneNo)
    @Html.PDFContextMenuItemFor(model => contextModel.Email)
    <div class="pdf-context-menu-item root-item">
        <span>@Html.DisplayNameFor(model => contextModel.ResidenceAddress)</span>
        <div class="pdf-context-menu-container">
            @Html.PDFContextMenuItemFor(model => contextModel.ResidenceAddress.ProvinceName)
            @Html.PDFContextMenuItemFor(model => contextModel.ResidenceAddress.DistrictName)
            @Html.PDFContextMenuItemFor(model => contextModel.ResidenceAddress.NeighborhoodName)
            @Html.PDFContextMenuItemFor(model => contextModel.ResidenceAddress.StreetName)
            @Html.PDFContextMenuItemFor(model => contextModel.ResidenceAddress.BuildingNo)
            @Html.PDFContextMenuItemFor(model => contextModel.ResidenceAddress.DoorNo)
            @Html.PDFContextMenuItemFor(model => contextModel.ResidenceAddress.BuildingName)
            @Html.PDFContextMenuItemFor(model => contextModel.ResidenceAddress.Floor)
            @Html.PDFContextMenuItemFor(model => contextModel.ResidenceAddress.PostalCode)
            @Html.PDFContextMenuItemFor(model => contextModel.ResidenceAddress.BBK)
        </div>
    </div>
    <div class="pdf-context-menu-item root-item">
        <span>@Html.DisplayNameFor(model => contextModel.SubscriptionAddress)</span>
        <div class="pdf-context-menu-container">
            @Html.PDFContextMenuItemFor(model => contextModel.SubscriptionAddress.ProvinceName)
            @Html.PDFContextMenuItemFor(model => contextModel.SubscriptionAddress.DistrictName)
            @Html.PDFContextMenuItemFor(model => contextModel.SubscriptionAddress.NeighborhoodName)
            @Html.PDFContextMenuItemFor(model => contextModel.SubscriptionAddress.StreetName)
            @Html.PDFContextMenuItemFor(model => contextModel.SubscriptionAddress.BuildingNo)
            @Html.PDFContextMenuItemFor(model => contextModel.SubscriptionAddress.DoorNo)
            @Html.PDFContextMenuItemFor(model => contextModel.SubscriptionAddress.BuildingName)
            @Html.PDFContextMenuItemFor(model => contextModel.SubscriptionAddress.Floor)
            @Html.PDFContextMenuItemFor(model => contextModel.SubscriptionAddress.PostalCode)
            @Html.PDFContextMenuItemFor(model => contextModel.SubscriptionAddress.BBK)
        </div>
    </div>
    @Html.PDFContextMenuItemFor(model => contextModel.PSTN)
    <div class="pdf-context-menu-item root-item">
        <span>@Html.DisplayNameFor(model => contextModel.LandPhone)</span>
        <div class="pdf-context-menu-container">
            @Html.PDFContextMenuItemFor(model => contextModel.LandPhone.Yes)
            @Html.PDFContextMenuItemFor(model => contextModel.LandPhone.No)
        </div>
    </div>
    @Html.PDFContextMenuItemFor(model => contextModel.TariffName)
    @Html.PDFContextMenuItemFor(model => contextModel.CompanyTitle)
    @Html.PDFContextMenuItemFor(model => contextModel.TaxOffice)
    @Html.PDFContextMenuItemFor(model => contextModel.TaxNo)
    @Html.PDFContextMenuItemFor(model => contextModel.TCKAndTaxNo)
    @Html.PDFContextMenuItemFor(model => contextModel.FirstAndLastName)
    @Html.PDFContextMenuItemFor(model => contextModel.DisplayName)
    @Html.PDFContextMenuItemFor(model => contextModel.CentralSystemNo)
    @Html.PDFContextMenuItemFor(model => contextModel.TradeRegistrationNo)
    @Html.PDFContextMenuItemFor(model => contextModel.BillingAddress)
    @Html.PDFContextMenuItemFor(model => contextModel.XDSLNo)
    @Html.PDFContextMenuItemFor(model => contextModel.TransitionSourceOperator)
</div>
<!--Context menu-->