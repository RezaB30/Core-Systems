@using RezaB.Web.Authentication

@model RadiusR_Manager.Models.ViewModels.SetupServiceTaskDetailsViewModel

@{
    ViewBag.Title = RadiusR.Localization.Pages.Common.CustomerSetupTasks + "-" + RadiusR.Localization.Pages.Common.Details;
}

<table class="details-table">
    <tr>
        <td>
            @Html.LabelFor(model => model.ClientName)
        </td>
        <td>
            @Html.DisplayFor(model => model.ClientName)
        </td>
    </tr>
    <tr>
        <td>
            @Html.LabelFor(model => model.IssueDate)
        </td>
        <td>
            @Html.DisplayFor(model => model.IssueDate)
        </td>
    </tr>
    <tr>
        <td>
            @Html.LabelFor(model => model.User)
        </td>
        <td>
            @Html.DisplayFor(model => model.User)
        </td>
    </tr>
    <tr>
        <td>
            @Html.LabelFor(model => model.TaskType)
        </td>
        <td>
            @Html.DisplayFor(model => model.TaskType)
        </td>
    </tr>
    <tr>
        <td>
            @Html.LabelFor(model => model.XDSLType)
        </td>
        <td>
            @Html.DisplayFor(model => model.XDSLType)
        </td>
    </tr>
    <tr>
        <td>
            @Html.LabelFor(model => model.HasModem)
        </td>
        <td>
            @Html.DisplayFor(model => model.HasModem)
        </td>
    </tr>
    <tr>
        <td>
            @Html.LabelFor(model => model.ModemName)
        </td>
        <td>
            @Html.DisplayFor(model => model.ModemName)
        </td>
    </tr>
    <tr>
        <td>
            @Html.LabelFor(model => model.Details)
        </td>
        <td>
            @Html.DisplayFor(model => model.Details)
        </td>
    </tr>
    <tr>
        <td>
            @Html.LabelFor(model => model.AllowanceState)
        </td>
        <td>
            @Html.DisplayFor(model => model.AllowanceState)
        </td>
    </tr>
    <tr>
        <td>
            @Html.LabelFor(model => model.Stages)
        </td>
        <td>
            @foreach (var item in Model.Stages)
            {
                <div>
                    <div class="rate-limit-title">
                        @Html.DisplayFor(modelItem => item.Date)
                    </div>
                    <table class="details-table">
                        <tr>
                            <td>
                                @Html.LabelFor(modelItem => item.Status)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem=>item.Status)
                            </td>
                        </tr>
                        <tr>
                            <td>
                                @Html.LabelFor(modelItem => item.Details)
                            </td>
                            <td style="white-space: pre-line;">@Html.DisplayFor(modelItem => item.Details)</td>
                        </tr>
                        <tr>
                            <td>
                                @Html.LabelFor(modelItem => item.ReservationDate)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ReservationDate)
                            </td>
                        </tr>
                    </table>
                </div>
            }
        </td>
    </tr>
</table>
<div class="centered" style="margin: 1em 0;">
    <a class="link-button iconed-button back-button" href="@ViewBag.BackLink">@RadiusR.Localization.Pages.Common.Back</a>
    @if (Model.IsActive && User.HasPermission("Close Setup Task"))
    {
        @:&nbsp;
        using (Html.BeginForm("CancelTask", null, null, FormMethod.Post, new { @confirm = "enabled", @style = "display: inline-block;" }))
        {
            @Html.AntiForgeryToken()
            @Html.Hidden("returnUrl", ViewBag.BackLink as string)
            @Html.Hidden("id", ViewContext.RouteData.Values["id"])
            <input type="submit" value="@RadiusR.Localization.Pages.Common.Cancel" class="link-button iconed-button cancel-button" />
        }
        @:&nbsp;
        using (Html.BeginForm("CompleteTask", null, null, FormMethod.Post, new { @confirm = "enabled", @style = "display: inline-block;" }))
        {
            @Html.AntiForgeryToken()
            @Html.Hidden("returnUrl", ViewBag.BackLink as string)
            @Html.Hidden("id", ViewContext.RouteData.Values["id"])
            <input type="submit" value="@RadiusR.Localization.Pages.Common.Finish" class="link-button iconed-button accept-button" />
        }
    }
</div>